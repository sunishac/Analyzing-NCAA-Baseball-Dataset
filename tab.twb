<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.0'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (NCAABaseball-SSDI)' inline='true' name='federated.0iktire1cixzma15xs5u20bgsq68' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NCAABaseball-SSDI' name='excel-direct.19rbagj1av61bt16pxcd41flfuel'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\chala\Desktop\SSDI\project\NCAABaseball-SSDI.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.19rbagj1av61bt16pxcd41flfuel' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:I606:no:A1:I606:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Regional Site' ordinal='1' />
            <column datatype='integer' name='Game' ordinal='2' />
            <column datatype='string' name='Winning Team' ordinal='3' />
            <column datatype='integer' name='Runs' ordinal='4' />
            <column datatype='integer' name='Seed' ordinal='5' />
            <column datatype='string' name='Losing Team' ordinal='6' />
            <column datatype='integer' name='Runs 1' ordinal='7' />
            <column datatype='integer' name='Seed 1' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Regional Site</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Regional Site]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Regional Site</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Game</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Game]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Game</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Winning Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Winning Team]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Winning Team</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Runs]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Runs</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Seed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Seed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Losing Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Losing Team]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Losing Team</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runs 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Runs 1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Runs 1</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seed 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Seed 1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Seed 1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I606:no:A1:I606:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Losing Team]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Regional Site]' role='dimension' type='nominal' />
      <column datatype='string' name='[Winning Team]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Losing Team]' derivation='None' name='[none:Losing Team:nk]' pivot='key' type='nominal' />
      <column-instance column='[Regional Site]' derivation='None' name='[none:Regional Site:nk]' pivot='key' type='nominal' />
      <column-instance column='[Winning Team]' derivation='None' name='[none:Winning Team:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.364835' measure-ordering='alphabetic' measure-percentage='0.454945' parameter-percentage='0.18022' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Winning Team:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austin Peay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fresno St.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ohio St.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. John&apos;s&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vanderbilt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arizona St.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UC Davis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Louisiana-Lafayette&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pepperdine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southern Miss.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UNC Wilmington&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Birmingham Southern&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oral Roberts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ball State&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ohio State&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The Citadel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Florida Atlantic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Carolina St.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southern Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UNC-Wilmington&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;College of Charleston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NC Wilmington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rutgers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eastern Michigan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Long Beach St.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nevada-Las Vegas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UC Irvine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Texas Southern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wichita State&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Army&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Florida St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LSU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northwestern St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southern Univ.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UNLV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cal State - Fullerton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois-Chicago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oregon St.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Western Carolina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wichita St.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bucknell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cal State Fullerton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mississippi St.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Texas A&amp;M&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Western Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coastal Carolina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kent St.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NC Charlotte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Winthrop&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Creighton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NC-Wilmington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sam Houston St.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tulane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clemson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia Tech&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Miami of Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stetson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Commonwealth&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florida State&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Notre Dame&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Southwest Missouri&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;USC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cal St. Fullerton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach State&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Mexico St.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Alabama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UC Riverside&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Florida&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;James Madison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mississippi State&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Princeton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cal - Riverside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oklahoma St.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TCU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wake Forest&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Stanford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Louisiana State&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas Tech&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UCLA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Regional Site:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kinston, NC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stanford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Corvallis, OR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norman, OK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tallahassee, FL&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Oxford, MS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lincoln, NE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Knoxville, TN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Starkville, MS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Athens, GA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gainesville, FL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clemson, SC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway, SC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbia, MO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waco, TX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hattiesburg, MS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baton Rouge, LA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cary, NC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Long Beach, CA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tempe, AZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottesville, VA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbia, SC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington, KY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stillwater, OK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Atlanta, GA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Bend, IN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fayetteville, AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fullerton, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson, NC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malibu, CA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austin, TX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fullerton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palo Alto, CA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Losing Team:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;East Carolina&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Notre Dame&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;TCU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pepperdine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bethune-Cookman&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oral Roberts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Southern Miss.&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Stetson&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='average games played'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NCAABaseball-SSDI)' name='federated.0iktire1cixzma15xs5u20bgsq68' />
          </datasources>
          <datasource-dependencies datasource='federated.0iktire1cixzma15xs5u20bgsq68'>
            <column datatype='integer' name='[Game]' role='measure' type='quantitative' />
            <column datatype='string' name='[Regional Site]' role='dimension' type='nominal' />
            <column-instance column='[Game]' derivation='Avg' name='[avg:Game:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Regional Site]' derivation='None' name='[none:Regional Site:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0iktire1cixzma15xs5u20bgsq68].[avg:Game:qk]' />
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='loosing team '>
      <layout-options>
        <title>
          <formatted-text>
            <run>loosing team relative to winning team</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Sum of Runs and sum of Runs 1 for each Winning Team broken down by Losing Team.  The marks are labeled by Year. The view is filtered on Losing Team, which keeps Arkansas and Texas. The filters like this can be used by stakeholders when they want analysis between two matches.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NCAABaseball-SSDI)' name='federated.0iktire1cixzma15xs5u20bgsq68' />
          </datasources>
          <datasource-dependencies datasource='federated.0iktire1cixzma15xs5u20bgsq68'>
            <column datatype='string' name='[Losing Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Runs 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[Winning Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Losing Team]' derivation='None' name='[none:Losing Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Winning Team]' derivation='None' name='[none:Winning Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Runs 1]' derivation='Sum' name='[sum:Runs 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Runs]' derivation='Sum' name='[sum:Runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Losing Team:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Losing Team:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:Losing Team:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Losing Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.0iktire1cixzma15xs5u20bgsq68].[sum:Runs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.0iktire1cixzma15xs5u20bgsq68].[sum:Runs 1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0iktire1cixzma15xs5u20bgsq68].[none:Losing Team:nk] / [federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk])</rows>
        <cols>([federated.0iktire1cixzma15xs5u20bgsq68].[sum:Runs:qk] + [federated.0iktire1cixzma15xs5u20bgsq68].[sum:Runs 1:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='most lost teams'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top loosing teams</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NCAABaseball-SSDI)' name='federated.0iktire1cixzma15xs5u20bgsq68' />
          </datasources>
          <datasource-dependencies datasource='federated.0iktire1cixzma15xs5u20bgsq68'>
            <column datatype='string' name='[Losing Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Runs 1]' role='measure' type='quantitative' />
            <column-instance column='[Runs 1]' derivation='Median' name='[med:Runs 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Losing Team]' derivation='None' name='[none:Losing Team:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Losing Team:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Losing Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Losing Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Losing Team:nk]' />
              <wedge-size column='[federated.0iktire1cixzma15xs5u20bgsq68].[med:Runs 1:qk]' />
              <size column='[federated.0iktire1cixzma15xs5u20bgsq68].[med:Runs 1:qk]' />
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Losing Team:nk]' />
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[med:Runs 1:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='records'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Winning team records per year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NCAABaseball-SSDI)' name='federated.0iktire1cixzma15xs5u20bgsq68' />
          </datasources>
          <datasource-dependencies datasource='federated.0iktire1cixzma15xs5u20bgsq68'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Winning Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Winning Team]' derivation='None' name='[none:Winning Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]'>
            <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Alabama&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.0iktire1cixzma15xs5u20bgsq68].[sum:Number of Records:qk]</rows>
        <cols>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='regional sites'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 regional sites</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NCAABaseball-SSDI)' name='federated.0iktire1cixzma15xs5u20bgsq68' />
          </datasources>
          <datasource-dependencies datasource='federated.0iktire1cixzma15xs5u20bgsq68'>
            <column datatype='integer' name='[Game]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Regional Site]' role='dimension' type='nominal' />
            <column-instance column='[Regional Site]' derivation='None' name='[none:Regional Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Game])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Regional Site:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0iktire1cixzma15xs5u20bgsq68].[sum:Number of Records:qk]' />
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]' />
              <color column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='regional sites per year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Regional sites based on year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NCAABaseball-SSDI)' name='federated.0iktire1cixzma15xs5u20bgsq68' />
          </datasources>
          <datasource-dependencies datasource='federated.0iktire1cixzma15xs5u20bgsq68'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Regional Site]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Regional Site]' derivation='None' name='[none:Regional Site:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]' included-values='in-range'>
            <min>2005</min>
            <max>2006</max>
          </filter>
          <slices>
            <column>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iktire1cixzma15xs5u20bgsq68].[sum:Number of Records:qk]</rows>
        <cols>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='winning team per year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top winning teams per year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NCAABaseball-SSDI)' name='federated.0iktire1cixzma15xs5u20bgsq68' />
          </datasources>
          <datasource-dependencies datasource='federated.0iktire1cixzma15xs5u20bgsq68'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Winning Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Winning Team]' derivation='None' name='[none:Winning Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Alabama&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Arizona&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Arizona St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Arkansas&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Army&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Auburn&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Austin Peay&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Ball State&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Baylor&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Birmingham Southern&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Bucknell&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Cal - Riverside&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Cal St. Fullerton&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Cal State - Fullerton&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Cal State Fullerton&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Central Florida&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Clemson&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Coastal Carolina&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;College of Charleston&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Creighton&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;East Carolina&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Eastern Michigan&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Elon&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Evansville&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Florida&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Florida Atlantic&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Florida St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Florida State&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Fresno St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Georgia Tech&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Hawaii&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Houston&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Illinois-Chicago&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Jacksonville&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;James Madison&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Kansas&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Kent St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Kentucky&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Lamar&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Lipscomb&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Long Beach St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Long Beach State&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Louisiana State&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Louisiana-Lafayette&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Louisville&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;LSU&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Maine&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Manhattan&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Miami&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Miami of Ohio&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Michigan&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Minnesota&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Mississippi&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Mississippi St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Mississippi State&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Missouri&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;NC Charlotte&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;NC Wilmington&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;NC-Wilmington&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Nebraska&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Nevada-Las Vegas&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;New Mexico St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;New Orleans&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;North Carolina&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;North Carolina St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Northwestern St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Notre Dame&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Ohio St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Ohio State&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Oklahoma&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Oklahoma St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Oral Roberts&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Oregon St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Pepperdine&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Princeton&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Rice&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Richmond&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Rutgers&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Sam Houston St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;San Diego&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;San Francisco&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;South Alabama&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;South Carolina&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Southern Miss.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Southern Mississippi&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Southern Univ.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Southwest Missouri&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;St. John&apos;s&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Stanford&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Stetson&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;TCU&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Tennessee&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Texas&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Texas A&amp;M&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Texas Southern&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Texas Tech&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;The Citadel&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Troy&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Tulane&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;UC Davis&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;UC Irvine&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;UC Riverside&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;UCLA&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;UNC Wilmington&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;UNC-Wilmington&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;UNLV&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;USC&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Vanderbilt&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Virginia&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Virginia Commonwealth&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Wake Forest&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Washington&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Western Carolina&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Western Kentucky&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Wichita St.&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Wichita State&quot;' />
                  <groupfilter function='member' level='[none:Winning Team:nk]' member='&quot;Winthrop&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0iktire1cixzma15xs5u20bgsq68].[sum:Number of Records:qk]' />
              <color column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]' />
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]' />
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='winning teams'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top five winning teams </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NCAABaseball-SSDI)' name='federated.0iktire1cixzma15xs5u20bgsq68' />
          </datasources>
          <datasource-dependencies datasource='federated.0iktire1cixzma15xs5u20bgsq68'>
            <column datatype='integer' name='[Game]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Winning Team]' role='dimension' type='nominal' />
            <column-instance column='[Winning Team]' derivation='None' name='[none:Winning Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Game])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Winning Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0iktire1cixzma15xs5u20bgsq68].[sum:Number of Records:qk]' />
              <text column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]' />
              <color column='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='loosing team '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]</field>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]</field>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='winning team per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[cnt:Number of Records:qk]</field>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='average games played'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]</field>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='winning teams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]</field>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]</field>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='regional sites per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]</field>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='records'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Winning Team:nk]</field>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='regional sites'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Regional Site:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='most lost teams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iktire1cixzma15xs5u20bgsq68].[none:Losing Team:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0iktire1cixzma15xs5u20bgsq68].[med:Runs 1:qk]' type='size' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iktire1cixzma15xs5u20bgsq68].[none:Losing Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='average games played' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='loosing team ' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='most lost teams' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='records' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAQ8ElEQVR4nO3d6W8c933H8ffM7C7vUyRFUgdFSaZtyTosyY4dWYmdpA0sFwXctAmKNgiS
      NG3QoP9BH/hZHxYF+iBA0DR3jzhxnKRO4kOWZFqyZB2UREmkeIniklxyuQf3np2d+fUBLUWs
      HJdrzSxJzff1SNCx8+VoPvM75jf705RSCiF8Sl/tAoRYTRIA4WsSAOFrAa8PoJTCsiwAHMdB
      0zSvD7mu2LaNYRirXcaa4TgOul65+7JWyUFwsVgkFApV6nDrgmmaVFVVrXYZa4ZpmoRCoYrd
      KD2KmmJu9CyvvHXRm48XwiWeBMDKxpicz1EVlCGGWNvcv0KVzdTELbp39FEdkP6+WNtcHwSX
      slEGBofQQje4NVtg87Yt9HW3uH0YIVzh3SDYWuT0lVmePvDInd+SQfC9ZBC8XKUHwTILtMok
      AMs9ILNAQqwPEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsS
      AOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDh
      axIA4WsSAOFrEgDhaxIA4Wuub5DhFLMMvP8e4USJXYc+wY7OZmSfGLFWud4COA707n2Ko587
      yOT1UWy3DyCEi1xvAQLVdeQmz/LOcJTefU9iKIVVKgFLe8Capun2Idc127blnNzFtm2KxWLF
      jufJDjGOXSKXmuPS4DwHn9nP7f1PLMsiGAy6fbh1TXbNWa7S58P1FiATCzNweZii41AKtKFr
      2rIxgOwUfy85J/dat3uEKccmn8thOVBdU0tV0LjzZ3K3u5fsEbZcpfcIc70F0HSD2voGtz9W
      CE/IcwDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDha2UEQGFm0+RNk9FrV0jkbVxfQyFEhZXx
      IKzIu//1MnX7NnLs5BAdmy2+9hcHvKtMiAooowUwqApl+dl/9/Pc5z8Jcv8XD4AVrQVynBJm
      oYijbMyig25lsKrbaWsMlfWyi6wFupesBVpuTa4FyiUmeeU/X2N4eJT6h/qozUwT3PPXfPNP
      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
    </thumbnail>
    <thumbnail height='192' name='regional sites' width='192'>
      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
      N38AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='regional sites per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='winning team per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='winning teams' width='192'>
      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
      Ae5XMCN1nc8XAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
